AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description:  'AWS SAM template for the backend of the serverless application'
Parameters:
  Email:
    Type: String
    Description: Email address for the admin user
Globals:
  Function:
    Timeout: 30
    MemorySize: 3008
    Architectures:
      - x86_64
Resources:
  GetYoutubeCaption:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: functions/getYoutubeCaption/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x        
  SummaryTest:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: functions/summaryTest/
      Handler: app.lambdaHandler
      Runtime: nodejs16.x
  SnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: 'youtube-summary-email'
      DisplayName: 'Youtube Summary'
      Subscription:
        - Endpoint: !Ref Email
          Protocol: 'email'
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: YoutubeSummary
      DefinitionUri: stateMachine/definition.json
      Role: !GetAtt StateMachineRole.Arn
      DefinitionSubstitutions:
        GetYoutubeCaption: !GetAtt GetYoutubeCaption.Arn
        SummaryTest: !GetAtt SummaryTest.Arn
        SnsTopic: !Ref SnsTopic
      Events:
        SummarizeApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: POST
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Variables:
        StateMachineArn: !Ref StateMachine
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0"
          title: "youtubevideosummary"
        basePath: "/Prod"
        schemes:
          - "https"
        paths:
          "/":
            post:
              consumes:
                - "application/json"
              responses:
                "200":
                  description: "200 response"
                "400":
                  description: "400 response"
              x-amazon-apigateway-integration:
                type: "aws"
                credentials:  !GetAtt ApiRole.Arn
                httpMethod: "POST"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:states:action/StartExecution"
                responses:
                  "200":
                    statusCode: "200"
                  "400":
                    statusCode: "400"
                requestTemplates:
                  application/json: |
                    {
                      "input": "$util.escapeJavaScript($input.json('$'))",
                      "stateMachineArn": "${stageVariables.StateMachineArn}"
                    }
                passthroughBehavior: "when_no_match"
  ApiRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: StateMachineSummarizeApiRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: ApiRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow 
                Action:
                  - 'states:StartExecution'
                Resource: !Ref StateMachine
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-StateMachine
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'sns:Publish'
                Resource: '*'

Outputs:
  StateMachineApi:
    Description: "API Gateway endpoint URL for Prod stage for State Machine"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
    Export:
      Name: !Sub "${AWS::StackName}-StateMachineApi"


